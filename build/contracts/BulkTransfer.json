{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/access/Ownable.sol",
    "1": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/IERC20.sol",
    "2": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
    "3": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/utils/SafeERC20.sol",
    "4": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Address.sol",
    "5": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Context.sol",
    "6": "contracts/BulkTransfer.sol"
  },
  "ast": {
    "absolutePath": "contracts/BulkTransfer.sol",
    "exportedSymbols": {
      "Address": [
        2480
      ],
      "BulkTransfer": [
        66
      ],
      "Context": [
        2071
      ],
      "IERC20": [
        2149
      ],
      "IERC20Permit": [
        2185
      ],
      "Ownable": [
        1768
      ],
      "SafeERC20": [
        2049
      ]
    },
    "id": 67,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:23:6"
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 67,
        "sourceUnit": 2050,
        "src": "63:65:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lenovo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 67,
        "sourceUnit": 1769,
        "src": "129:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1768,
              "src": "208:7:6"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "208:7:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 66,
        "linearizedBaseContracts": [
          66,
          1768,
          2071
        ],
        "name": "BulkTransfer",
        "nameLocation": "192:12:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9,
            "libraryName": {
              "id": 6,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2049,
              "src": "228:9:6"
            },
            "nodeType": "UsingForDirective",
            "src": "222:27:6",
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2149,
                "src": "242:6:6"
              },
              "referencedDeclaration": 2149,
              "src": "242:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2149",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "394:259:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "412:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "412:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 25,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "433:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "433:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "412:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420696e707574",
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "449:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
                          "typeString": "literal_string \"Invalid input\""
                        },
                        "value": "Invalid input"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
                          "typeString": "literal_string \"Invalid input\""
                        }
                      ],
                      "id": 22,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "404:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "404:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "404:61:6"
                },
                {
                  "assignments": [
                    33
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "482:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 64,
                      "src": "475:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2149",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 32,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 31,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2149,
                          "src": "475:6:6"
                        },
                        "referencedDeclaration": 2149,
                        "src": "475:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2149",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 35,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "497:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2149,
                      "src": "490:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2149_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "490:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2149",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "475:35:6"
                },
                {
                  "body": {
                    "id": 62,
                    "nodeType": "Block",
                    "src": "565:82:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 52,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "598:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "598:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 54,
                                "name": "recipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14,
                                "src": "610:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 56,
                              "indexExpression": {
                                "id": 55,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39,
                                "src": "621:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "610:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 57,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "625:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 59,
                              "indexExpression": {
                                "id": 58,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39,
                                "src": "633:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "625:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 49,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "579:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2149",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 51,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2148,
                            "src": "579:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "579:57:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 61,
                        "nodeType": "ExpressionStatement",
                        "src": "579:57:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "537:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 43,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "541:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "541:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "537:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63,
                  "initializationExpression": {
                    "assignments": [
                      39
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "530:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 63,
                        "src": "525:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "525:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "534:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "525:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "560:3:6",
                      "subExpression": {
                        "id": 46,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "560:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48,
                    "nodeType": "ExpressionStatement",
                    "src": "560:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "520:127:6"
                }
              ]
            },
            "functionSelector": "72a503be",
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 19,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1687,
                  "src": "384:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "384:9:6"
              }
            ],
            "name": "transfer",
            "nameLocation": "264:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "290:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "282:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "282:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "329:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "312:27:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "312:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 13,
                    "nodeType": "ArrayTypeName",
                    "src": "312:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "363:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "349:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "349:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16,
                    "nodeType": "ArrayTypeName",
                    "src": "349:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "272:104:6"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "394:0:6"
            },
            "scope": 66,
            "src": "255:398:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 67,
        "src": "183:472:6",
        "usedErrors": []
      }
    ],
    "src": "38:618:6"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b38061007e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a61461005157806372a503be1461005b5780638da5cb5b1461006e578063f2fde38b14610092575b600080fd5b6100596100a5565b005b6100596100693660046103fb565b6100b9565b610076610218565b6040516001600160a01b03909116815260200160405180910390f35b6100596100a03660046103da565b610227565b6100ad6102a0565b6100b760006102ff565b565b6100c16102a0565b80518251146101075760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081a5b9c1d5d609a1b60448201526064015b60405180910390fd5b8260005b835181101561021157816001600160a01b03166323b872dd3386848151811061014457634e487b7160e01b600052603260045260246000fd5b602002602001015186858151811061016c57634e487b7160e01b600052603260045260246000fd5b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b1580156101c657600080fd5b505af11580156101da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fe91906104cd565b508061020981610540565b91505061010b565b5050505050565b6000546001600160a01b031690565b61022f6102a0565b6001600160a01b0381166102945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100fe565b61029d816102ff565b50565b336102a9610218565b6001600160a01b0316146100b75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100fe565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461036657600080fd5b919050565b600082601f83011261037b578081fd5b8135602061039061038b8361051d565b6104ed565b80838252828201915082860187848660051b89010111156103af578586fd5b855b858110156103cd578135845292840192908401906001016103b1565b5090979650505050505050565b6000602082840312156103eb578081fd5b6103f48261034f565b9392505050565b60008060006060848603121561040f578182fd5b6104188461034f565b92506020848101356001600160401b0380821115610434578485fd5b818701915087601f830112610447578485fd5b813561045561038b8261051d565b8082825285820191508585018b878560051b8801011115610474578889fd5b8895505b8386101561049d576104898161034f565b835260019590950194918601918601610478565b509650505060408701359250808311156104b5578384fd5b50506104c38682870161036b565b9150509250925092565b6000602082840312156104de578081fd5b815180151581146103f4578182fd5b604051601f8201601f191681016001600160401b038111828210171561051557610515610567565b604052919050565b60006001600160401b0382111561053657610536610567565b5060051b60200190565b600060001982141561056057634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122078807a48f261a175c21665a07bff1855f9baacca6bb9ded0a0ed7476dabec41664736f6c63430008040033",
  "bytecodeSha1": "4cd869ed79e5e82a8ca068af13f6b3ba8a84fce6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "BulkTransfer",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "13": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "12": [
            2169,
            2191,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "BulkTransfer.transfer": {
          "11": [
            412,
            447,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "8": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "9": [
            2541,
            2558
          ],
          "10": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "4": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "0": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "5": [
            2161,
            2234
          ],
          "6": [
            2244,
            2272
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "6": {
        "BulkTransfer.transfer": {
          "1": [
            404,
            465
          ],
          "2": [
            579,
            636
          ],
          "3": [
            560,
            563
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Address",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/IERC20Permit",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a61461005157806372a503be1461005b5780638da5cb5b1461006e578063f2fde38b14610092575b600080fd5b6100596100a5565b005b6100596100693660046103fb565b6100b9565b610076610218565b6040516001600160a01b03909116815260200160405180910390f35b6100596100a03660046103da565b610227565b6100ad6102a0565b6100b760006102ff565b565b6100c16102a0565b80518251146101075760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081a5b9c1d5d609a1b60448201526064015b60405180910390fd5b8260005b835181101561021157816001600160a01b03166323b872dd3386848151811061014457634e487b7160e01b600052603260045260246000fd5b602002602001015186858151811061016c57634e487b7160e01b600052603260045260246000fd5b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b1580156101c657600080fd5b505af11580156101da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fe91906104cd565b508061020981610540565b91505061010b565b5050505050565b6000546001600160a01b031690565b61022f6102a0565b6001600160a01b0381166102945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100fe565b61029d816102ff565b50565b336102a9610218565b6001600160a01b0316146100b75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100fe565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461036657600080fd5b919050565b600082601f83011261037b578081fd5b8135602061039061038b8361051d565b6104ed565b80838252828201915082860187848660051b89010111156103af578586fd5b855b858110156103cd578135845292840192908401906001016103b1565b5090979650505050505050565b6000602082840312156103eb578081fd5b6103f48261034f565b9392505050565b60008060006060848603121561040f578182fd5b6104188461034f565b92506020848101356001600160401b0380821115610434578485fd5b818701915087601f830112610447578485fd5b813561045561038b8261051d565b8082825285820191508585018b878560051b8801011115610474578889fd5b8895505b8386101561049d576104898161034f565b835260019590950194918601918601610478565b509650505060408701359250808311156104b5578384fd5b50506104c38682870161036b565b9150509250925092565b6000602082840312156104de578081fd5b815180151581146103f4578182fd5b604051601f8201601f191681016001600160401b038111828210171561051557610515610567565b604052919050565b60006001600160401b0382111561053657610536610567565b5060051b60200190565b600060001982141561056057634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122078807a48f261a175c21665a07bff1855f9baacca6bb9ded0a0ed7476dabec41664736f6c63430008040033",
  "deployedSourceMap": "183:472:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:0;;;:::i;:::-;;255:398:6;;;;;;:::i;:::-;;:::i;1201:85:0:-;;;:::i;:::-;;;-1:-1:-1;;;;;2846:32:9;;;2828:51;;2816:2;2801:18;1201:85:0;;;;;;;2081:198;;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;255:398:6:-;1094:13:0;:11;:13::i;:::-;433:7:6::1;:14;412:10;:17;:35;404:61;;;::::0;-1:-1:-1;;;404:61:6;;4240:2:9;404:61:6::1;::::0;::::1;4222:21:9::0;4279:2;4259:18;;;4252:30;-1:-1:-1;;;4298:18:9;;;4291:43;4351:18;;404:61:6::1;;;;;;;;;497:12:::0;475::::1;520:127;541:10;:17;537:1;:21;520:127;;;579:5;-1:-1:-1::0;;;;;579:18:6::1;;598:10;610;621:1;610:13;;;;;;-1:-1:-1::0;;;610:13:6::1;;;;;;;;;;;;;;;625:7;633:1;625:10;;;;;;-1:-1:-1::0;;;625:10:6::1;;;;;;;;;;::::0;;::::1;::::0;;;;;;579:57:::1;::::0;-1:-1:-1;;;;;;579:57:6::1;::::0;;;;;;-1:-1:-1;;;;;3148:15:9;;;579:57:6::1;::::0;::::1;3130:34:9::0;3200:15;;;;3180:18;;;3173:43;3232:18;;;3225:34;3065:18;;579:57:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;560:3:6;::::1;::::0;::::1;:::i;:::-;;;;520:127;;;;1117:1:0;255:398:6::0;;;:::o;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85::o;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;3472:2:9;2161:73:0::1;::::0;::::1;3454:21:9::0;3511:2;3491:18;;;3484:30;3550:34;3530:18;;;3523:62;-1:-1:-1;;;3601:18:9;;;3594:36;3647:19;;2161:73:0::1;3444:228:9::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;719:10:5;1422:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1422:23:0;;1414:68;;;;-1:-1:-1;;;1414:68:0;;3879:2:9;1414:68:0;;;3861:21:9;;;3898:18;;;3891:30;3957:34;3937:18;;;3930:62;4009:18;;1414:68:0;3851:182:9;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;14:173:9:-;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:693::-;246:5;299:3;292:4;284:6;280:17;276:27;266:2;;321:5;314;307:20;266:2;361:6;348:20;387:4;411:60;427:43;467:2;427:43;:::i;:::-;411:60;:::i;:::-;493:3;517:2;512:3;505:15;545:2;540:3;536:12;529:19;;580:2;572:6;568:15;632:3;627:2;621;618:1;614:10;606:6;602:23;598:32;595:41;592:2;;;653:5;646;639:20;592:2;679:5;693:163;707:2;704:1;701:9;693:163;;;764:17;;752:30;;802:12;;;;834;;;;725:1;718:9;693:163;;;-1:-1:-1;874:5:9;;256:629;-1:-1:-1;;;;;;;256:629:9:o;890:196::-;949:6;1002:2;990:9;981:7;977:23;973:32;970:2;;;1023:6;1015;1008:22;970:2;1051:29;1070:9;1051:29;:::i;:::-;1041:39;960:126;-1:-1:-1;;;960:126:9:o;1091:1284::-;1218:6;1226;1234;1287:2;1275:9;1266:7;1262:23;1258:32;1255:2;;;1308:6;1300;1293:22;1255:2;1336:29;1355:9;1336:29;:::i;:::-;1326:39;-1:-1:-1;1384:2:9;1422:18;;;1409:32;-1:-1:-1;;;;;1490:14:9;;;1487:2;;;1522:6;1514;1507:22;1487:2;1565:6;1554:9;1550:22;1540:32;;1610:7;1603:4;1599:2;1595:13;1591:27;1581:2;;1637:6;1629;1622:22;1581:2;1678;1665:16;1701:60;1717:43;1757:2;1717:43;:::i;1701:60::-;1783:3;1807:2;1802:3;1795:15;1835:2;1830:3;1826:12;1819:19;;1866:2;1862;1858:11;1914:7;1909:2;1903;1900:1;1896:10;1892:2;1888:19;1884:28;1881:41;1878:2;;;1940:6;1932;1925:22;1878:2;1967:6;1958:15;;1982:169;1996:2;1993:1;1990:9;1982:169;;;2053:23;2072:3;2053:23;:::i;:::-;2041:36;;2014:1;2007:9;;;;;2097:12;;;;2129;;1982:169;;;-1:-1:-1;2170:5:9;-1:-1:-1;;;2228:2:9;2213:18;;2200:32;;-1:-1:-1;2244:16:9;;;2241:2;;;2278:6;2270;2263:22;2241:2;;;2306:63;2361:7;2350:8;2339:9;2335:24;2306:63;:::i;:::-;2296:73;;;1245:1130;;;;;:::o;2380:297::-;2447:6;2500:2;2488:9;2479:7;2475:23;2471:32;2468:2;;;2521:6;2513;2506:22;2468:2;2558:9;2552:16;2611:5;2604:13;2597:21;2590:5;2587:32;2577:2;;2638:6;2630;2623:22;4380:275;4451:2;4445:9;4516:2;4497:13;;-1:-1:-1;;4493:27:9;4481:40;;-1:-1:-1;;;;;4536:34:9;;4572:22;;;4533:62;4530:2;;;4598:18;;:::i;:::-;4634:2;4627:22;4425:230;;-1:-1:-1;4425:230:9:o;4660:183::-;4720:4;-1:-1:-1;;;;;4742:30:9;;4739:2;;;4775:18;;:::i;:::-;-1:-1:-1;4820:1:9;4816:14;4832:4;4812:25;;4729:114::o;4848:236::-;4887:3;-1:-1:-1;;4908:17:9;;4905:2;;;-1:-1:-1;;;4948:33:9;;5004:4;5001:1;4994:15;5034:4;4955:3;5022:17;4905:2;-1:-1:-1;5076:1:9;5065:13;;4895:189::o;5089:127::-;5150:10;5145:3;5141:20;5138:1;5131:31;5181:4;5178:1;5171:15;5205:4;5202:1;5195:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    183,
    655
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x72A503BE EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x76 PUSH2 0x218 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0xA0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST PUSH2 0xAD PUSH2 0x2A0 JUMP JUMPDEST PUSH2 0xB7 PUSH1 0x0 PUSH2 0x2FF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x2A0 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x107 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081A5B9C1D5D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x211 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x144 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x16C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x4CD JUMP JUMPDEST POP DUP1 PUSH2 0x209 DUP2 PUSH2 0x540 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x294 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0x29D DUP2 PUSH2 0x2FF JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x2A9 PUSH2 0x218 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x37B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x390 PUSH2 0x38B DUP4 PUSH2 0x51D JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3AF JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3CD JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3B1 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EB JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3F4 DUP3 PUSH2 0x34F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x40F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x418 DUP5 PUSH2 0x34F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x434 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x447 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x455 PUSH2 0x38B DUP3 PUSH2 0x51D JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP6 ADD DUP12 DUP8 DUP6 PUSH1 0x5 SHL DUP9 ADD ADD GT ISZERO PUSH2 0x474 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x49D JUMPI PUSH2 0x489 DUP2 PUSH2 0x34F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x478 JUMP JUMPDEST POP SWAP7 POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x4B5 JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP PUSH2 0x4C3 DUP7 DUP3 DUP8 ADD PUSH2 0x36B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3F4 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x515 JUMPI PUSH2 0x515 PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x536 JUMPI PUSH2 0x536 PUSH2 0x567 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x560 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x807A48F261A175C21665A07BFF1855F9BAACCA6BB9DED0A0ED PUSH21 0x76DABEC41664736F6C634300080400330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        183,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "EQ",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x72A503BE"
    },
    "49": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B"
    },
    "53": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6E"
    },
    "64": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x92"
    },
    "75": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "DUP1",
      "path": "6"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        183,
        655
      ],
      "op": "REVERT",
      "path": "6"
    },
    "81": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "82": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "85": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5"
    },
    "88": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "89": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "90": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "STOP",
      "path": "0"
    },
    "91": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        255,
        653
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "92": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        255,
        653
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x59"
    },
    "95": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        255,
        653
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x69"
    },
    "98": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        255,
        653
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "99": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        255,
        653
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "101": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        255,
        653
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3FB"
    },
    "104": {
      "fn": "BulkTransfer.transfer",
      "jump": "i",
      "offset": [
        255,
        653
      ],
      "op": "JUMP",
      "path": "6"
    },
    "105": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        255,
        653
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "106": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        255,
        653
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB9"
    },
    "109": {
      "fn": "BulkTransfer.transfer",
      "jump": "i",
      "offset": [
        255,
        653
      ],
      "op": "JUMP",
      "path": "6"
    },
    "110": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "111": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76"
    },
    "114": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218"
    },
    "117": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "118": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "119": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "121": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "128": {
      "op": "SHL"
    },
    "129": {
      "op": "SUB"
    },
    "130": {
      "op": "SWAP1"
    },
    "131": {
      "op": "SWAP2"
    },
    "132": {
      "op": "AND"
    },
    "133": {
      "op": "DUP2"
    },
    "134": {
      "op": "MSTORE"
    },
    "135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "137": {
      "op": "ADD"
    },
    "138": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "140": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "141": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "142": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "143": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SUB",
      "path": "0"
    },
    "144": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "145": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "RETURN",
      "path": "0"
    },
    "146": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "147": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "150": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "153": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DA"
    },
    "159": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "160": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "161": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x227"
    },
    "164": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "165": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "166": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD"
    },
    "169": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0"
    },
    "172": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "173": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "174": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 0,
      "value": "0xB7"
    },
    "177": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "179": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "182": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "183": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "184": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "185": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        255,
        653
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "186": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "189": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0"
    },
    "192": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "193": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        433,
        440
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 1
    },
    "195": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        433,
        447
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "196": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        412,
        422
      ],
      "op": "DUP3",
      "path": "6"
    },
    "197": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        412,
        429
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "198": {
      "branch": 11,
      "fn": "BulkTransfer.transfer",
      "offset": [
        412,
        447
      ],
      "op": "EQ",
      "path": "6"
    },
    "199": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x107"
    },
    "202": {
      "branch": 11,
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "203": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "205": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "206": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "210": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "212": {
      "op": "SHL"
    },
    "213": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "DUP2",
      "path": "6"
    },
    "214": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "217": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "219": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "DUP3",
      "path": "6"
    },
    "220": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "ADD",
      "path": "6"
    },
    "221": {
      "op": "MSTORE"
    },
    "222": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "224": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "226": {
      "op": "DUP3"
    },
    "227": {
      "op": "ADD"
    },
    "228": {
      "op": "MSTORE"
    },
    "229": {
      "op": "PUSH13",
      "value": "0x125B9D985B1A59081A5B9C1D5D"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "245": {
      "op": "SHL"
    },
    "246": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "248": {
      "op": "DUP3"
    },
    "249": {
      "op": "ADD"
    },
    "250": {
      "op": "MSTORE"
    },
    "251": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "253": {
      "op": "ADD"
    },
    "254": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "255": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "257": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "258": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "DUP1",
      "path": "6"
    },
    "259": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "260": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "SUB",
      "path": "6"
    },
    "261": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "262": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "263": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        404,
        465
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "264": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        497,
        509
      ],
      "op": "DUP3",
      "path": "6"
    },
    "265": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        475,
        487
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "267": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        520,
        647
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "268": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        541,
        551
      ],
      "op": "DUP4",
      "path": "6"
    },
    "269": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        541,
        558
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "270": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        537,
        538
      ],
      "op": "DUP2",
      "path": "6"
    },
    "271": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        537,
        558
      ],
      "op": "LT",
      "path": "6"
    },
    "272": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        520,
        647
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "273": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        520,
        647
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x211"
    },
    "276": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        520,
        647
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "277": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        584
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 2
    },
    "278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "284": {
      "op": "SHL"
    },
    "285": {
      "op": "SUB"
    },
    "286": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        597
      ],
      "op": "AND",
      "path": "6"
    },
    "287": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        597
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "292": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        598,
        608
      ],
      "op": "CALLER",
      "path": "6"
    },
    "293": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        620
      ],
      "op": "DUP7",
      "path": "6"
    },
    "294": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        621,
        622
      ],
      "op": "DUP5",
      "path": "6"
    },
    "295": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "DUP2",
      "path": "6"
    },
    "296": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "297": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "DUP2",
      "path": "6"
    },
    "298": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "LT",
      "path": "6"
    },
    "299": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "302": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "303": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "308": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "310": {
      "op": "SHL"
    },
    "311": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "313": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "314": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x32"
    },
    "316": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "318": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "319": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "321": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "323": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "REVERT",
      "path": "6"
    },
    "324": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "325": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "327": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "MUL",
      "path": "6"
    },
    "328": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "330": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "ADD",
      "path": "6"
    },
    "331": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "ADD",
      "path": "6"
    },
    "332": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        610,
        623
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "333": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        632
      ],
      "op": "DUP7",
      "path": "6"
    },
    "334": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        633,
        634
      ],
      "op": "DUP6",
      "path": "6"
    },
    "335": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "DUP2",
      "path": "6"
    },
    "336": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "337": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "DUP2",
      "path": "6"
    },
    "338": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "LT",
      "path": "6"
    },
    "339": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16C"
    },
    "342": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "343": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "348": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "350": {
      "op": "SHL"
    },
    "351": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "353": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "354": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x32"
    },
    "356": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "358": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "359": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "361": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "363": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "REVERT",
      "path": "6"
    },
    "364": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "365": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "367": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "368": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "DUP2",
      "path": "6"
    },
    "369": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "MUL",
      "path": "6"
    },
    "370": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "371": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "372": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "373": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "ADD",
      "path": "6"
    },
    "374": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "ADD",
      "path": "6"
    },
    "375": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        625,
        635
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "376": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "378": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "383": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "385": {
      "op": "SHL"
    },
    "386": {
      "op": "SUB"
    },
    "387": {
      "op": "NOT"
    },
    "388": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "390": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP7",
      "path": "6"
    },
    "391": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "392": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "SHL",
      "path": "6"
    },
    "393": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "AND",
      "path": "6"
    },
    "394": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP2",
      "path": "6"
    },
    "395": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "402": {
      "op": "SHL"
    },
    "403": {
      "op": "SUB"
    },
    "404": {
      "op": "SWAP4"
    },
    "405": {
      "op": "DUP5"
    },
    "406": {
      "op": "AND"
    },
    "407": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "409": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP3",
      "path": "6"
    },
    "410": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "ADD",
      "path": "6"
    },
    "411": {
      "op": "MSTORE"
    },
    "412": {
      "op": "SWAP3"
    },
    "413": {
      "op": "SWAP1"
    },
    "414": {
      "op": "SWAP2"
    },
    "415": {
      "op": "AND"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "418": {
      "op": "DUP4"
    },
    "419": {
      "op": "ADD"
    },
    "420": {
      "op": "MSTORE"
    },
    "421": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "423": {
      "op": "DUP3"
    },
    "424": {
      "op": "ADD"
    },
    "425": {
      "op": "MSTORE"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "428": {
      "op": "ADD"
    },
    "429": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "431": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "433": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "434": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP1",
      "path": "6"
    },
    "435": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP4",
      "path": "6"
    },
    "436": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "SUB",
      "path": "6"
    },
    "437": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP2",
      "path": "6"
    },
    "438": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "440": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP8",
      "path": "6"
    },
    "441": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP1",
      "path": "6"
    },
    "442": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "443": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "444": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP1",
      "path": "6"
    },
    "445": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "446": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C6"
    },
    "449": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "450": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "452": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP1",
      "path": "6"
    },
    "453": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "REVERT",
      "path": "6"
    },
    "454": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "455": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "POP",
      "path": "6"
    },
    "456": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "GAS",
      "path": "6"
    },
    "457": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "CALL",
      "path": "6"
    },
    "458": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "459": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP1",
      "path": "6"
    },
    "460": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "461": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DA"
    },
    "464": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "465": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "466": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "468": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP1",
      "path": "6"
    },
    "469": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "470": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "471": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "473": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "REVERT",
      "path": "6"
    },
    "474": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "475": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "POP",
      "path": "6"
    },
    "476": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "POP",
      "path": "6"
    },
    "477": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "POP",
      "path": "6"
    },
    "478": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "POP",
      "path": "6"
    },
    "479": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "481": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "482": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "483": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "485": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "NOT",
      "path": "6"
    },
    "486": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "488": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP3",
      "path": "6"
    },
    "489": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "ADD",
      "path": "6"
    },
    "490": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "AND",
      "path": "6"
    },
    "491": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP3",
      "path": "6"
    },
    "492": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "ADD",
      "path": "6"
    },
    "493": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP1",
      "path": "6"
    },
    "494": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "496": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "497": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "POP",
      "path": "6"
    },
    "498": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "DUP2",
      "path": "6"
    },
    "499": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "ADD",
      "path": "6"
    },
    "500": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "501": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FE"
    },
    "504": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "505": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "506": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4CD"
    },
    "509": {
      "fn": "BulkTransfer.transfer",
      "jump": "i",
      "offset": [
        579,
        636
      ],
      "op": "JUMP",
      "path": "6"
    },
    "510": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        579,
        636
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "511": {
      "op": "POP"
    },
    "512": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        560,
        563
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 3
    },
    "513": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        560,
        563
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x209"
    },
    "516": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        560,
        563
      ],
      "op": "DUP2",
      "path": "6"
    },
    "517": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        560,
        563
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x540"
    },
    "520": {
      "fn": "BulkTransfer.transfer",
      "jump": "i",
      "offset": [
        560,
        563
      ],
      "op": "JUMP",
      "path": "6"
    },
    "521": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        560,
        563
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "522": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        560,
        563
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "523": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        560,
        563
      ],
      "op": "POP",
      "path": "6"
    },
    "524": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        560,
        563
      ],
      "op": "POP",
      "path": "6"
    },
    "525": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        520,
        647
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10B"
    },
    "528": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        520,
        647
      ],
      "op": "JUMP",
      "path": "6"
    },
    "529": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        520,
        647
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "530": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        520,
        647
      ],
      "op": "POP",
      "path": "6"
    },
    "531": {
      "offset": [
        1117,
        1118
      ],
      "op": "POP",
      "path": "0"
    },
    "532": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        255,
        653
      ],
      "op": "POP",
      "path": "6"
    },
    "533": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        255,
        653
      ],
      "op": "POP",
      "path": "6"
    },
    "534": {
      "fn": "BulkTransfer.transfer",
      "offset": [
        255,
        653
      ],
      "op": "POP",
      "path": "6"
    },
    "535": {
      "fn": "BulkTransfer.transfer",
      "jump": "o",
      "offset": [
        255,
        653
      ],
      "op": "JUMP",
      "path": "6"
    },
    "536": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "537": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "539": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 4
    },
    "540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "546": {
      "op": "SHL"
    },
    "547": {
      "op": "SUB"
    },
    "548": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "549": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "550": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "552": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22F"
    },
    "555": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0"
    },
    "558": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "559": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "566": {
      "op": "SHL"
    },
    "567": {
      "op": "SUB"
    },
    "568": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 5
    },
    "569": {
      "branch": 12,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "570": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x294"
    },
    "573": {
      "branch": 12,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "576": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "577": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "581": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "583": {
      "op": "SHL"
    },
    "584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "590": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "591": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "592": {
      "op": "MSTORE"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "597": {
      "op": "DUP3"
    },
    "598": {
      "op": "ADD"
    },
    "599": {
      "op": "MSTORE"
    },
    "600": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "635": {
      "op": "DUP3"
    },
    "636": {
      "op": "ADD"
    },
    "637": {
      "op": "MSTORE"
    },
    "638": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "645": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "647": {
      "op": "SHL"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "650": {
      "op": "DUP3"
    },
    "651": {
      "op": "ADD"
    },
    "652": {
      "op": "MSTORE"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "655": {
      "op": "ADD"
    },
    "656": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE"
    },
    "659": {
      "op": "JUMP"
    },
    "660": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "661": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x29D"
    },
    "664": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "665": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "668": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "669": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "670": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "671": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "672": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "673": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 7
    },
    "674": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1429
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x2A9"
    },
    "677": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1427
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218"
    },
    "680": {
      "fn": "Ownable._checkOwner",
      "jump": "i",
      "offset": [
        1422,
        1429
      ],
      "op": "JUMP",
      "path": "0"
    },
    "681": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1429
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "688": {
      "op": "SHL"
    },
    "689": {
      "op": "SUB"
    },
    "690": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "AND",
      "path": "0"
    },
    "691": {
      "branch": 13,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0"
    },
    "692": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7"
    },
    "695": {
      "branch": 13,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "696": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "698": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "705": {
      "op": "SHL"
    },
    "706": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "707": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "710": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "712": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "713": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "714": {
      "op": "DUP2"
    },
    "715": {
      "op": "SWAP1"
    },
    "716": {
      "op": "MSTORE"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "719": {
      "op": "DUP3"
    },
    "720": {
      "op": "ADD"
    },
    "721": {
      "op": "MSTORE"
    },
    "722": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "757": {
      "op": "DUP3"
    },
    "758": {
      "op": "ADD"
    },
    "759": {
      "op": "MSTORE"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "762": {
      "op": "ADD"
    },
    "763": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE"
    },
    "766": {
      "op": "JUMP"
    },
    "767": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "768": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "770": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "771": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "778": {
      "op": "SHL"
    },
    "779": {
      "op": "SUB"
    },
    "780": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 9
    },
    "781": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "782": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "789": {
      "op": "SHL"
    },
    "790": {
      "op": "SUB"
    },
    "791": {
      "op": "NOT"
    },
    "792": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "793": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "794": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "795": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "796": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "797": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "798": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x40"
    },
    "800": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "801": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "802": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "803": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "804": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "805": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "806": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "807": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "808": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "841": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "842": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "843": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "844": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "845": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "846": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "847": {
      "op": "JUMPDEST"
    },
    "848": {
      "op": "DUP1"
    },
    "849": {
      "op": "CALLDATALOAD"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "856": {
      "op": "SHL"
    },
    "857": {
      "op": "SUB"
    },
    "858": {
      "op": "DUP2"
    },
    "859": {
      "op": "AND"
    },
    "860": {
      "op": "DUP2"
    },
    "861": {
      "op": "EQ"
    },
    "862": {
      "op": "PUSH2",
      "value": "0x366"
    },
    "865": {
      "op": "JUMPI"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "868": {
      "op": "DUP1"
    },
    "869": {
      "op": "REVERT"
    },
    "870": {
      "op": "JUMPDEST"
    },
    "871": {
      "op": "SWAP2"
    },
    "872": {
      "op": "SWAP1"
    },
    "873": {
      "op": "POP"
    },
    "874": {
      "jump": "o",
      "op": "JUMP"
    },
    "875": {
      "op": "JUMPDEST"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "878": {
      "op": "DUP3"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "881": {
      "op": "DUP4"
    },
    "882": {
      "op": "ADD"
    },
    "883": {
      "op": "SLT"
    },
    "884": {
      "op": "PUSH2",
      "value": "0x37B"
    },
    "887": {
      "op": "JUMPI"
    },
    "888": {
      "op": "DUP1"
    },
    "889": {
      "op": "DUP2"
    },
    "890": {
      "op": "REVERT"
    },
    "891": {
      "op": "JUMPDEST"
    },
    "892": {
      "op": "DUP2"
    },
    "893": {
      "op": "CALLDATALOAD"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "896": {
      "op": "PUSH2",
      "value": "0x390"
    },
    "899": {
      "op": "PUSH2",
      "value": "0x38B"
    },
    "902": {
      "op": "DUP4"
    },
    "903": {
      "op": "PUSH2",
      "value": "0x51D"
    },
    "906": {
      "jump": "i",
      "op": "JUMP"
    },
    "907": {
      "op": "JUMPDEST"
    },
    "908": {
      "op": "PUSH2",
      "value": "0x4ED"
    },
    "911": {
      "jump": "i",
      "op": "JUMP"
    },
    "912": {
      "op": "JUMPDEST"
    },
    "913": {
      "op": "DUP1"
    },
    "914": {
      "op": "DUP4"
    },
    "915": {
      "op": "DUP3"
    },
    "916": {
      "op": "MSTORE"
    },
    "917": {
      "op": "DUP3"
    },
    "918": {
      "op": "DUP3"
    },
    "919": {
      "op": "ADD"
    },
    "920": {
      "op": "SWAP2"
    },
    "921": {
      "op": "POP"
    },
    "922": {
      "op": "DUP3"
    },
    "923": {
      "op": "DUP7"
    },
    "924": {
      "op": "ADD"
    },
    "925": {
      "op": "DUP8"
    },
    "926": {
      "op": "DUP5"
    },
    "927": {
      "op": "DUP7"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "930": {
      "op": "SHL"
    },
    "931": {
      "op": "DUP10"
    },
    "932": {
      "op": "ADD"
    },
    "933": {
      "op": "ADD"
    },
    "934": {
      "op": "GT"
    },
    "935": {
      "op": "ISZERO"
    },
    "936": {
      "op": "PUSH2",
      "value": "0x3AF"
    },
    "939": {
      "op": "JUMPI"
    },
    "940": {
      "op": "DUP6"
    },
    "941": {
      "op": "DUP7"
    },
    "942": {
      "op": "REVERT"
    },
    "943": {
      "op": "JUMPDEST"
    },
    "944": {
      "op": "DUP6"
    },
    "945": {
      "op": "JUMPDEST"
    },
    "946": {
      "op": "DUP6"
    },
    "947": {
      "op": "DUP2"
    },
    "948": {
      "op": "LT"
    },
    "949": {
      "op": "ISZERO"
    },
    "950": {
      "op": "PUSH2",
      "value": "0x3CD"
    },
    "953": {
      "op": "JUMPI"
    },
    "954": {
      "op": "DUP2"
    },
    "955": {
      "op": "CALLDATALOAD"
    },
    "956": {
      "op": "DUP5"
    },
    "957": {
      "op": "MSTORE"
    },
    "958": {
      "op": "SWAP3"
    },
    "959": {
      "op": "DUP5"
    },
    "960": {
      "op": "ADD"
    },
    "961": {
      "op": "SWAP3"
    },
    "962": {
      "op": "SWAP1"
    },
    "963": {
      "op": "DUP5"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "op": "SWAP1"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "968": {
      "op": "ADD"
    },
    "969": {
      "op": "PUSH2",
      "value": "0x3B1"
    },
    "972": {
      "op": "JUMP"
    },
    "973": {
      "op": "JUMPDEST"
    },
    "974": {
      "op": "POP"
    },
    "975": {
      "op": "SWAP1"
    },
    "976": {
      "op": "SWAP8"
    },
    "977": {
      "op": "SWAP7"
    },
    "978": {
      "op": "POP"
    },
    "979": {
      "op": "POP"
    },
    "980": {
      "op": "POP"
    },
    "981": {
      "op": "POP"
    },
    "982": {
      "op": "POP"
    },
    "983": {
      "op": "POP"
    },
    "984": {
      "op": "POP"
    },
    "985": {
      "jump": "o",
      "op": "JUMP"
    },
    "986": {
      "op": "JUMPDEST"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "991": {
      "op": "DUP3"
    },
    "992": {
      "op": "DUP5"
    },
    "993": {
      "op": "SUB"
    },
    "994": {
      "op": "SLT"
    },
    "995": {
      "op": "ISZERO"
    },
    "996": {
      "op": "PUSH2",
      "value": "0x3EB"
    },
    "999": {
      "op": "JUMPI"
    },
    "1000": {
      "op": "DUP1"
    },
    "1001": {
      "op": "DUP2"
    },
    "1002": {
      "op": "REVERT"
    },
    "1003": {
      "op": "JUMPDEST"
    },
    "1004": {
      "op": "PUSH2",
      "value": "0x3F4"
    },
    "1007": {
      "op": "DUP3"
    },
    "1008": {
      "op": "PUSH2",
      "value": "0x34F"
    },
    "1011": {
      "jump": "i",
      "op": "JUMP"
    },
    "1012": {
      "op": "JUMPDEST"
    },
    "1013": {
      "op": "SWAP4"
    },
    "1014": {
      "op": "SWAP3"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "op": "POP"
    },
    "1018": {
      "jump": "o",
      "op": "JUMP"
    },
    "1019": {
      "op": "JUMPDEST"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1022": {
      "op": "DUP1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1027": {
      "op": "DUP5"
    },
    "1028": {
      "op": "DUP7"
    },
    "1029": {
      "op": "SUB"
    },
    "1030": {
      "op": "SLT"
    },
    "1031": {
      "op": "ISZERO"
    },
    "1032": {
      "op": "PUSH2",
      "value": "0x40F"
    },
    "1035": {
      "op": "JUMPI"
    },
    "1036": {
      "op": "DUP2"
    },
    "1037": {
      "op": "DUP3"
    },
    "1038": {
      "op": "REVERT"
    },
    "1039": {
      "op": "JUMPDEST"
    },
    "1040": {
      "op": "PUSH2",
      "value": "0x418"
    },
    "1043": {
      "op": "DUP5"
    },
    "1044": {
      "op": "PUSH2",
      "value": "0x34F"
    },
    "1047": {
      "jump": "i",
      "op": "JUMP"
    },
    "1048": {
      "op": "JUMPDEST"
    },
    "1049": {
      "op": "SWAP3"
    },
    "1050": {
      "op": "POP"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1053": {
      "op": "DUP5"
    },
    "1054": {
      "op": "DUP2"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "op": "CALLDATALOAD"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "op": "DUP1"
    },
    "1066": {
      "op": "DUP3"
    },
    "1067": {
      "op": "GT"
    },
    "1068": {
      "op": "ISZERO"
    },
    "1069": {
      "op": "PUSH2",
      "value": "0x434"
    },
    "1072": {
      "op": "JUMPI"
    },
    "1073": {
      "op": "DUP5"
    },
    "1074": {
      "op": "DUP6"
    },
    "1075": {
      "op": "REVERT"
    },
    "1076": {
      "op": "JUMPDEST"
    },
    "1077": {
      "op": "DUP2"
    },
    "1078": {
      "op": "DUP8"
    },
    "1079": {
      "op": "ADD"
    },
    "1080": {
      "op": "SWAP2"
    },
    "1081": {
      "op": "POP"
    },
    "1082": {
      "op": "DUP8"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1085": {
      "op": "DUP4"
    },
    "1086": {
      "op": "ADD"
    },
    "1087": {
      "op": "SLT"
    },
    "1088": {
      "op": "PUSH2",
      "value": "0x447"
    },
    "1091": {
      "op": "JUMPI"
    },
    "1092": {
      "op": "DUP5"
    },
    "1093": {
      "op": "DUP6"
    },
    "1094": {
      "op": "REVERT"
    },
    "1095": {
      "op": "JUMPDEST"
    },
    "1096": {
      "op": "DUP2"
    },
    "1097": {
      "op": "CALLDATALOAD"
    },
    "1098": {
      "op": "PUSH2",
      "value": "0x455"
    },
    "1101": {
      "op": "PUSH2",
      "value": "0x38B"
    },
    "1104": {
      "op": "DUP3"
    },
    "1105": {
      "op": "PUSH2",
      "value": "0x51D"
    },
    "1108": {
      "jump": "i",
      "op": "JUMP"
    },
    "1109": {
      "op": "JUMPDEST"
    },
    "1110": {
      "op": "DUP1"
    },
    "1111": {
      "op": "DUP3"
    },
    "1112": {
      "op": "DUP3"
    },
    "1113": {
      "op": "MSTORE"
    },
    "1114": {
      "op": "DUP6"
    },
    "1115": {
      "op": "DUP3"
    },
    "1116": {
      "op": "ADD"
    },
    "1117": {
      "op": "SWAP2"
    },
    "1118": {
      "op": "POP"
    },
    "1119": {
      "op": "DUP6"
    },
    "1120": {
      "op": "DUP6"
    },
    "1121": {
      "op": "ADD"
    },
    "1122": {
      "op": "DUP12"
    },
    "1123": {
      "op": "DUP8"
    },
    "1124": {
      "op": "DUP6"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1127": {
      "op": "SHL"
    },
    "1128": {
      "op": "DUP9"
    },
    "1129": {
      "op": "ADD"
    },
    "1130": {
      "op": "ADD"
    },
    "1131": {
      "op": "GT"
    },
    "1132": {
      "op": "ISZERO"
    },
    "1133": {
      "op": "PUSH2",
      "value": "0x474"
    },
    "1136": {
      "op": "JUMPI"
    },
    "1137": {
      "op": "DUP9"
    },
    "1138": {
      "op": "DUP10"
    },
    "1139": {
      "op": "REVERT"
    },
    "1140": {
      "op": "JUMPDEST"
    },
    "1141": {
      "op": "DUP9"
    },
    "1142": {
      "op": "SWAP6"
    },
    "1143": {
      "op": "POP"
    },
    "1144": {
      "op": "JUMPDEST"
    },
    "1145": {
      "op": "DUP4"
    },
    "1146": {
      "op": "DUP7"
    },
    "1147": {
      "op": "LT"
    },
    "1148": {
      "op": "ISZERO"
    },
    "1149": {
      "op": "PUSH2",
      "value": "0x49D"
    },
    "1152": {
      "op": "JUMPI"
    },
    "1153": {
      "op": "PUSH2",
      "value": "0x489"
    },
    "1156": {
      "op": "DUP2"
    },
    "1157": {
      "op": "PUSH2",
      "value": "0x34F"
    },
    "1160": {
      "jump": "i",
      "op": "JUMP"
    },
    "1161": {
      "op": "JUMPDEST"
    },
    "1162": {
      "op": "DUP4"
    },
    "1163": {
      "op": "MSTORE"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1166": {
      "op": "SWAP6"
    },
    "1167": {
      "op": "SWAP1"
    },
    "1168": {
      "op": "SWAP6"
    },
    "1169": {
      "op": "ADD"
    },
    "1170": {
      "op": "SWAP5"
    },
    "1171": {
      "op": "SWAP2"
    },
    "1172": {
      "op": "DUP7"
    },
    "1173": {
      "op": "ADD"
    },
    "1174": {
      "op": "SWAP2"
    },
    "1175": {
      "op": "DUP7"
    },
    "1176": {
      "op": "ADD"
    },
    "1177": {
      "op": "PUSH2",
      "value": "0x478"
    },
    "1180": {
      "op": "JUMP"
    },
    "1181": {
      "op": "JUMPDEST"
    },
    "1182": {
      "op": "POP"
    },
    "1183": {
      "op": "SWAP7"
    },
    "1184": {
      "op": "POP"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "op": "POP"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1189": {
      "op": "DUP8"
    },
    "1190": {
      "op": "ADD"
    },
    "1191": {
      "op": "CALLDATALOAD"
    },
    "1192": {
      "op": "SWAP3"
    },
    "1193": {
      "op": "POP"
    },
    "1194": {
      "op": "DUP1"
    },
    "1195": {
      "op": "DUP4"
    },
    "1196": {
      "op": "GT"
    },
    "1197": {
      "op": "ISZERO"
    },
    "1198": {
      "op": "PUSH2",
      "value": "0x4B5"
    },
    "1201": {
      "op": "JUMPI"
    },
    "1202": {
      "op": "DUP4"
    },
    "1203": {
      "op": "DUP5"
    },
    "1204": {
      "op": "REVERT"
    },
    "1205": {
      "op": "JUMPDEST"
    },
    "1206": {
      "op": "POP"
    },
    "1207": {
      "op": "POP"
    },
    "1208": {
      "op": "PUSH2",
      "value": "0x4C3"
    },
    "1211": {
      "op": "DUP7"
    },
    "1212": {
      "op": "DUP3"
    },
    "1213": {
      "op": "DUP8"
    },
    "1214": {
      "op": "ADD"
    },
    "1215": {
      "op": "PUSH2",
      "value": "0x36B"
    },
    "1218": {
      "jump": "i",
      "op": "JUMP"
    },
    "1219": {
      "op": "JUMPDEST"
    },
    "1220": {
      "op": "SWAP2"
    },
    "1221": {
      "op": "POP"
    },
    "1222": {
      "op": "POP"
    },
    "1223": {
      "op": "SWAP3"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "op": "SWAP3"
    },
    "1226": {
      "op": "POP"
    },
    "1227": {
      "op": "SWAP3"
    },
    "1228": {
      "jump": "o",
      "op": "JUMP"
    },
    "1229": {
      "op": "JUMPDEST"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1234": {
      "op": "DUP3"
    },
    "1235": {
      "op": "DUP5"
    },
    "1236": {
      "op": "SUB"
    },
    "1237": {
      "op": "SLT"
    },
    "1238": {
      "op": "ISZERO"
    },
    "1239": {
      "op": "PUSH2",
      "value": "0x4DE"
    },
    "1242": {
      "op": "JUMPI"
    },
    "1243": {
      "op": "DUP1"
    },
    "1244": {
      "op": "DUP2"
    },
    "1245": {
      "op": "REVERT"
    },
    "1246": {
      "op": "JUMPDEST"
    },
    "1247": {
      "op": "DUP2"
    },
    "1248": {
      "op": "MLOAD"
    },
    "1249": {
      "op": "DUP1"
    },
    "1250": {
      "op": "ISZERO"
    },
    "1251": {
      "op": "ISZERO"
    },
    "1252": {
      "op": "DUP2"
    },
    "1253": {
      "op": "EQ"
    },
    "1254": {
      "op": "PUSH2",
      "value": "0x3F4"
    },
    "1257": {
      "op": "JUMPI"
    },
    "1258": {
      "op": "DUP2"
    },
    "1259": {
      "op": "DUP3"
    },
    "1260": {
      "op": "REVERT"
    },
    "1261": {
      "op": "JUMPDEST"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1264": {
      "op": "MLOAD"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1267": {
      "op": "DUP3"
    },
    "1268": {
      "op": "ADD"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1271": {
      "op": "NOT"
    },
    "1272": {
      "op": "AND"
    },
    "1273": {
      "op": "DUP2"
    },
    "1274": {
      "op": "ADD"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1281": {
      "op": "SHL"
    },
    "1282": {
      "op": "SUB"
    },
    "1283": {
      "op": "DUP2"
    },
    "1284": {
      "op": "GT"
    },
    "1285": {
      "op": "DUP3"
    },
    "1286": {
      "op": "DUP3"
    },
    "1287": {
      "op": "LT"
    },
    "1288": {
      "op": "OR"
    },
    "1289": {
      "op": "ISZERO"
    },
    "1290": {
      "op": "PUSH2",
      "value": "0x515"
    },
    "1293": {
      "op": "JUMPI"
    },
    "1294": {
      "op": "PUSH2",
      "value": "0x515"
    },
    "1297": {
      "op": "PUSH2",
      "value": "0x567"
    },
    "1300": {
      "jump": "i",
      "op": "JUMP"
    },
    "1301": {
      "op": "JUMPDEST"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1304": {
      "op": "MSTORE"
    },
    "1305": {
      "op": "SWAP2"
    },
    "1306": {
      "op": "SWAP1"
    },
    "1307": {
      "op": "POP"
    },
    "1308": {
      "jump": "o",
      "op": "JUMP"
    },
    "1309": {
      "op": "JUMPDEST"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1318": {
      "op": "SHL"
    },
    "1319": {
      "op": "SUB"
    },
    "1320": {
      "op": "DUP3"
    },
    "1321": {
      "op": "GT"
    },
    "1322": {
      "op": "ISZERO"
    },
    "1323": {
      "op": "PUSH2",
      "value": "0x536"
    },
    "1326": {
      "op": "JUMPI"
    },
    "1327": {
      "op": "PUSH2",
      "value": "0x536"
    },
    "1330": {
      "op": "PUSH2",
      "value": "0x567"
    },
    "1333": {
      "jump": "i",
      "op": "JUMP"
    },
    "1334": {
      "op": "JUMPDEST"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1338": {
      "op": "SHL"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1341": {
      "op": "ADD"
    },
    "1342": {
      "op": "SWAP1"
    },
    "1343": {
      "jump": "o",
      "op": "JUMP"
    },
    "1344": {
      "op": "JUMPDEST"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1349": {
      "op": "NOT"
    },
    "1350": {
      "op": "DUP3"
    },
    "1351": {
      "op": "EQ"
    },
    "1352": {
      "op": "ISZERO"
    },
    "1353": {
      "op": "PUSH2",
      "value": "0x560"
    },
    "1356": {
      "op": "JUMPI"
    },
    "1357": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1364": {
      "op": "SHL"
    },
    "1365": {
      "op": "DUP2"
    },
    "1366": {
      "op": "MSTORE"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1371": {
      "op": "MSTORE"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1374": {
      "op": "DUP2"
    },
    "1375": {
      "op": "REVERT"
    },
    "1376": {
      "op": "JUMPDEST"
    },
    "1377": {
      "op": "POP"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "SWAP1"
    },
    "1382": {
      "jump": "o",
      "op": "JUMP"
    },
    "1383": {
      "op": "JUMPDEST"
    },
    "1384": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1391": {
      "op": "SHL"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1394": {
      "op": "MSTORE"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1399": {
      "op": "MSTORE"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1404": {
      "op": "REVERT"
    }
  },
  "sha1": "d177ffd52f387a026fedf0c54e01b0fe39c65cf3",
  "source": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract BulkTransfer is Ownable {\n    using SafeERC20 for IERC20;\n\n    function transfer(\n        address tokenAddress,\n        address[] memory recipients,\n        uint[] memory amounts\n    ) public onlyOwner {\n        require(recipients.length == amounts.length, \"Invalid input\");\n        IERC20 token = IERC20(tokenAddress);\n        for (uint i = 0; i < recipients.length; i++) {\n            token.transferFrom(msg.sender, recipients[i], amounts[i]);\n        }\n    }\n}\n",
  "sourceMap": "183:472:6:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:5;936:18:0;:32::i;:::-;183:472:6;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;183:472:6:-;;;;;;;",
  "sourcePath": "contracts/BulkTransfer.sol",
  "type": "contract"
}